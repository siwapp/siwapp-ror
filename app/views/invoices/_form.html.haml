= form_for @invoice, data: {new: is_new || @invoice.draft_was, role: 'invoice', controller: controller_name, model: controller_name.classify.underscore}, html: {class: 'invoice'} do |f|

  - if @invoice.errors.any?
    #error_explanation
      %h2
        = pluralize @invoice.errors.count, "error"
        prohibited this invoice from being saved:
      %ul
        - @invoice.errors.full_messages.each do |message|
          %li= message

  .m-b-2
    %h1.m-b-0
      - if @invoice.new_record?
        =t("new invoice")
      - else
        = @invoice
        - if @invoice.failed
          %small.text-muted (Payment failed)

    - if @invoice.new_record? or @invoice.draft
      .checkbox
        %label
          = f.check_box :draft
          =t("save as draft")

  %fieldset.m-b-2
    %legend.m-b-1=t("customer")
    = render partial: 'customers/form_fields', locals: {f: f}
    = f.hidden_field :customer_id

  %fieldset.m-b-2{"data-changes" => "amount"}
    %legend.m-b-1="#{t("invoice")} #{t("details")}"

    .row
      .col-xs-12.col-xl-8
        .row
          .col-xs-12.col-sm-6
            .form-group
              = f.label :series_id
              - if is_new and @default_series
                = f.collection_select :series_id, @series, :id, :to_s, {selected: @default_series.id}, {multiple: false, class: 'form-control c-select'}
              - else
                = f.collection_select :series_id, @series, :id, :to_s, {}, {multiple: false, class: 'form-control c-select', 'data-series_id_was': @invoice.series_id_was}
          .col-xs-12.col-sm-6
            .form-group
              = f.label :number
              - if is_new and @default_series
                = f.text_field :number, {class: 'form-control', value: @default_series.next_number}
              - else
                = f.text_field :number, {class: 'form-control', 'data-number_was': @invoice.number_was}

        .row
          .col-xs-12.col-sm-6
            .form-group
              = f.label :issue_date
              = f.date_field :issue_date,  is_new ? { class: 'form-control', value: Date.current() } : { class: 'form-control' }
          .col-xs-12.col-sm-6
            .form-group
              = f.label :due_date
              - due_date = @days_to_due.days > 0 ? Date.current() + @days_to_due.days : ''
              = f.date_field :due_date,  is_new ? { class: 'form-control', value: due_date} : { class: 'form-control' }

        .row
          .col-xs-12.col-sm-6
            .form-group
              = f.label :email_template_id
              = f.collection_select :email_template_id, @templates, :id, :to_s, {include_blank: t("select template for e-mail")}, {multiple: false, class: 'form-control c-select'}
          .col-xs-12.col-sm-6
            .form-group
              = f.label :print_template_id
              = f.collection_select :print_template_id, @templates, :id, :to_s, {include_blank: t("select template to print")}, {multiple: false, class: 'form-control c-select'}

    = render partial: 'shared/item_form', locals: {f: f, items: :items, invoice: @invoice, is_new: is_new}

  - unless @invoice.new_record?
    %fieldset.m-b-2{data: {changes: 'amount'}}
      %legend.m-b-1=t("payments")

      #js-payments-table.invoice-table
        = f.fields_for :payments, include_id: false  do |payment_form|
          = render partial: 'payment_fields', locals: {f: payment_form}

      .invoice-table-actions
        = link_to_add_association t("add payment"), f, :payments,    |
          'data-association-insertion-node' => '#js-payments-table', |
          'data-association-insertion-method' => 'append',        |
          :class => 'btn btn-secondary'
        - if not @invoice.new_record? and not @invoice.draft
          .checkbox.checkbox-inline
            %label
              = f.check_box :failed
              =t("payment collection failed")

  %fieldset.m-b-2
    %legend.m-b-1=t("tags")
    = render partial: 'shared/tagging_field', locals: {f: f, instance: @invoice}

  %fieldset.m-b-2
    %legend.m-b-1 Meta Attributes
    = render partial: 'shared/meta_form', locals: {f: f, instance: @invoice}
  %input{type: 'hidden', name: 'stay', id: 'stay'}
